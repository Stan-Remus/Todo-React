{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAkCeA,MA/Bf,YAAyE,IAAxDC,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,UAavD,OACI,iCACI,uBAAOC,MAAOF,EAAWG,SAdR,SAACC,GACtBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBL,EAAaO,EAAEG,OAAOL,QAYmCM,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAXU,SAACN,GACvBA,EAAEO,iBACFZ,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACc,KAAMZ,EAAWa,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aACjEnB,EAAa,KAQ6BY,UAAU,cAAcD,KAAK,SAAnE,SACI,mBAAGC,UAAU,yBAEjB,qBAAKA,UAAU,SAAf,SACI,yBAAQN,SAVE,SAACC,GACnBH,EAAUG,EAAEG,OAAOL,QASsBe,KAAK,QAAQR,UAAU,cAAxD,UACI,wBAAQP,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCGJgB,EA3BF,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,KAAMO,EAA4B,EAA5BA,KAAMrB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAc/B,OACG,sBAAKU,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAmED,IACnE,wBAAQF,QAbS,WACrBX,EAASD,EAAMsB,KAAI,SAACC,GAChB,OAAGA,EAAKP,KAAOK,EAAKL,GAChB,2BACOO,GADP,IACaR,WAAYQ,EAAKR,YAG3BQ,OAM2BZ,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QAnBO,WACnBX,EAASD,EAAMwB,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAAKL,QAkBTL,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCFde,EAlBE,SAAC,GAAwC,IAAtC1B,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAU0B,EAAoB,EAApBA,cAEjC,OACI,qBAAKhB,UAAU,iBAAf,SACA,oBAAIA,UAAU,YAAd,SACKgB,EAAcL,KAAI,SAAAD,GAAI,OACnB,cAAC,EAAD,CAAoBP,KAAMO,EAAKP,KAC/Bb,SAAUA,EAAUD,MAAOA,EAAOqB,KAAMA,EACxCM,cAAeA,GAFJN,EAAKL,YC+CjBY,MAlDf,WAAgB,IAAD,EAEqBC,mBAAS,IAF9B,mBAEN3B,EAFM,KAEKH,EAFL,OAGa8B,mBAAS,IAHtB,mBAGN7B,EAHM,KAGCC,EAHD,OAIe4B,mBAAS,OAJxB,mBAINC,EAJM,KAIE3B,EAJF,OAK6B0B,mBAAS,IALtC,mBAKNF,EALM,KAKSI,EALT,KA2Bb,OApBAC,qBAAU,YAEY,WACpB,OAAOF,GACL,IAAK,YACHC,EAAiB/B,EAAMwB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACA,IAAK,cACHgB,EAAiB/B,EAAMwB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC7C,MACA,QACAgB,EAAiB/B,IAIrBiC,KACC,CAACjC,EAAO8B,IAKT,sBAAKnB,UAAU,MAAf,UACE,iCACA,qDAEA,cAAE,EAAF,CACAT,UAAWA,EACXF,MAAOA,EACPC,SAAUA,EACVF,aAAcA,EACdI,UAAWA,IAGX,cAAE,EAAF,CACAwB,cAAeA,EACf1B,SAAUA,EACVD,MAAOA,QCrCEkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3532e7a9.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nfunction Form( { setInputText, todos, setTodos, inputText, setStatus }) {\r\n    const inputTextHandler = (e) => {\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([...todos, {text: inputText, completed: false, id: Math.random() * 1000}]);\r\n        setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n    return (\r\n        <form>\r\n            <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={ submitTodoHandler } className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default Form;\r\n\r\n","import React from 'react';\r\n\r\n const Todo = ({ text, todo, todos, setTodos }) => {\r\n     const deleteHandler = ()  => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n     };\r\n     const completeHandler = ()  => {\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id){\r\n                return{\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n     };\r\n     return(\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : '' }`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n     );\r\n };\r\n\r\n export default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n    \r\n    return(\r\n        <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n            {filteredTodos.map(todo => (\r\n                <Todo key={todo.id} text={todo.text}\r\n                setTodos={setTodos} todos={todos} todo={todo}\r\n                filteredTodos={filteredTodos}\r\n                />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default TodoList;","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport  Form  from './Components/Form';\nimport TodoList from './Components/TodoList';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n     //Funtions\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n        default: \n        setFilteredTodos(todos);\n        break;\n    }  \n    };\n    filterHandler();\n  }, [todos, status]);\n  \n\n\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>Remus's Todo List</h1>\n      </header>\n      < Form \n      inputText={inputText}\n      todos={todos} \n      setTodos={setTodos} \n      setInputText={setInputText}\n      setStatus={setStatus}\n      \n      />\n      < TodoList \n      filteredTodos={filteredTodos}\n      setTodos={setTodos} \n      todos={todos}/>\n    </div>\n    \n    \n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}